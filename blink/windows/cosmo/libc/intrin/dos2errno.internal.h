#ifndef BLINK_WIN_COSMO_LIBC_INTRIN_DOS2ERRNO_INTERNAL_H_
#define BLINK_WIN_COSMO_LIBC_INTRIN_DOS2ERRNO_INTERNAL_H_

#include <errno.h>
#include <winerror.h>

// Based on https://github.com/jart/cosmopolitan/blob/9634227/libc/intrin/dos2errno.internal.h

struct __attribute__((__packed__)) Dos2Errno {
 uint16_t doscode;
 int32_t systemv;
};

// Based on https://github.com/jart/cosmopolitan/blob/9634227/libc/sysv/dos2errno.h

// These are meant to generated assembly but I couldn't get that to work for pe32
// as all the files were filled with efi only pseudo-ops and the gas documentation
// only talks about coff and elf, not pe32. I know coff and pe32 are related but
// even with coff pseudo-ops, gas kept compaining.
// This is potentially useless anyway since errno.h uses different values for many
// errnos than linux.
struct Dos2Errno kDos2Errno[] = {
  { ERROR_INVALID_TARGET_HANDLE, EBADF },
  { ERROR_DIRECT_ACCESS_HANDLE, EBADF },
  { ERROR_MOD_NOT_FOUND, ENOSYS },
  { ERROR_BAD_COMMAND, EACCES },
  { ERROR_BAD_LENGTH, EACCES },
  { ERROR_BAD_NETPATH, ENOENT },
  { ERROR_BAD_NET_NAME, ENOENT },
  { ERROR_BAD_PATHNAME, ENOENT },
  { ERROR_BAD_NET_RESP, ENETDOWN },
  { ERROR_FILE_EXISTS, EEXIST },
  { ERROR_CANNOT_MAKE, EACCES },
  { ERROR_COMMITMENT_LIMIT, ENOMEM },
  { ERROR_CONNECTION_ABORTED, ECONNABORTED },
  { ERROR_CONNECTION_ACTIVE, EISCONN },
  { ERROR_CONNECTION_REFUSED, ECONNREFUSED },
  { ERROR_CRC, EACCES },
  { ERROR_DIR_NOT_EMPTY, ENOTEMPTY },
  { ERROR_DUP_NAME, EADDRINUSE },
  { ERROR_FILENAME_EXCED_RANGE, ENAMETOOLONG },
  { ERROR_GEN_FAILURE, EACCES },
  { ERROR_GRACEFUL_DISCONNECT, EPIPE },
  { ERROR_HOST_DOWN, EHOSTUNREACH },
  { ERROR_HOST_UNREACHABLE, EHOSTUNREACH },
  { ERROR_INSUFFICIENT_BUFFER, EFAULT },
  { ERROR_NOACCESS, EFAULT },
  { ERROR_INVALID_ADDRESS, EADDRNOTAVAIL },
  { ERROR_NOT_A_REPARSE_POINT, EINVAL },
  { ERROR_INVALID_FUNCTION, EINVAL },
  { ERROR_NEGATIVE_SEEK, EINVAL },
  { ERROR_INVALID_NETNAME, EADDRNOTAVAIL },
  { ERROR_INVALID_USER_BUFFER, EMSGSIZE },
  { ERROR_IO_PENDING, EINPROGRESS },
  { ERROR_LOCK_VIOLATION, EAGAIN },
  { ERROR_MORE_DATA, EMSGSIZE },
  { ERROR_NETNAME_DELETED, ECONNABORTED },
  { ERROR_NETWORK_ACCESS_DENIED, EACCES },
  { ERROR_NETWORK_BUSY, ENETDOWN },
  { ERROR_NETWORK_UNREACHABLE, ENETUNREACH },
  { ERROR_NONPAGED_SYSTEM_RESOURCES, ENOMEM },
  { ERROR_NOT_ENOUGH_MEMORY, ENOMEM },
  { ERROR_NOT_ENOUGH_QUOTA, ENOMEM },
  { ERROR_NOT_FOUND, ENOENT },
  { ERROR_NOT_READY, EACCES },
  { ERROR_NOT_SUPPORTED, ENOTSUP },
  { ERROR_NO_MORE_FILES, ENOENT },
  { ERROR_NO_SYSTEM_RESOURCES, ENOMEM },
  { ERROR_OPERATION_ABORTED, EINTR },
  { ERROR_OUT_OF_PAPER, EACCES },
  { ERROR_PAGED_SYSTEM_RESOURCES, ENOMEM },
  { ERROR_PAGEFILE_QUOTA, ENOMEM },
  { ERROR_PIPE_NOT_CONNECTED, EPIPE },
  { ERROR_PORT_UNREACHABLE, ECONNRESET },
  { ERROR_PROTOCOL_UNREACHABLE, ENETUNREACH },
  { ERROR_REM_NOT_LIST, ECONNREFUSED },
  { ERROR_REQUEST_ABORTED, EINTR },
  { ERROR_REQ_NOT_ACCEP, EWOULDBLOCK },
  { ERROR_SECTOR_NOT_FOUND, EACCES },
  { ERROR_SEM_TIMEOUT, ETIMEDOUT },
  { ERROR_SHARING_VIOLATION, EACCES },
  { ERROR_TOO_MANY_NAMES, ENOMEM },
  { ERROR_UNEXP_NET_ERR, ECONNABORTED },
  { ERROR_WORKING_SET_QUOTA, ENOMEM },
  { ERROR_WRITE_PROTECT, EACCES },
  { ERROR_WRONG_DISK, EACCES },
  { WSAEACCES, EACCES },
  { WSAEDISCON, EPIPE },
  { WSAEFAULT, EFAULT },
  { WSAEINVAL, EINVAL },
  { WSAEDQUOT, /*EDQUOT*/ 122 }, // EDQUOT isn't in mingw errno.h so just using linux value.
  { WSAEPROCLIM, ENOMEM },
  { WSANOTINITIALISED, ENETDOWN },
  { WSASYSNOTREADY, ENETDOWN },
  { WSAVERNOTSUPPORTED, ENOSYS },
  { WSAETIMEDOUT, ETIMEDOUT },
};

#endif /* BLINK_WIN_COSMO_INTRIN_DOS2ERRNO_INTERNAL_H_ */
